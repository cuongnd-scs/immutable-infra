pipeline {
  options {
    timestamps()
    timeout(time: 180, unit: 'MINUTES')
    ansiColor('xterm')
    disableConcurrentBuilds()
    buildDiscarder(logRotator(numToKeepStr: '250', daysToKeepStr: '5'))
  }

  agent {
    dockerfile {
      additionalBuildArgs '${DOCKER_NO_CACHE} --tag "packer-demo/jenkins-agent:${IMG_LABEL}" --build-arg "TERRAFORM_VERSION=${TERRAFORM_VERSION}" --build-arg "PACKER_VERSION=${PACKER_VERSION}"'
    }
  }
  triggers {
    cron('H H/3 * * *')
  }

  environment {
    AWS_ACCESS_KEY_ID     = credentials('PACKER_AWS_ACCESS_KEY')
    AWS_SECRET_ACCESS_KEY = credentials('PACKER_AWS_SECRET_KEY')
    WORK_SUB_DIR          = 'vm-based/packer'
    JENKINS_USER_ID       = 'user'
    JENKINS_API_TOKEN     = credentials('JENKIN_API_TOKEN')
  }

  parameters {
    string(
      name: 'IMG_LABEL',
      defaultValue: 'latest',
      description: 'docker container image label name'
    )
    choice(
      name: 'PACKER_REMOTE_USER',
      choices: [
        'ubuntu',
      ],
      description: 'packer remote user'
    )
    choice(
      name: 'TERRAFORM_VERSION',
      choices: [
        '0.12.24',
      ],
      description: 'terraform version'
    )
    choice(
      name: 'PACKER_VERSION',
      choices: [
        '1.5.6',
      ],
      description: 'packer version'
    )
  }
    stages {
        stage('Test') {
            steps {
                sh '''#!/usr/bin/env bash
                packer -v
                terraform -v
                  '''
            }
        }
    }
}
